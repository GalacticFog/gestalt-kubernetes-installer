# ------------ Installer settings, typically no need to change --------------------

# -- 'debug' for more verbose output in the gestalt installer
gestalt_install_mode=debug
gestalt_fogcli_debug=false
# gestalt_fogcli_debug=true

# Don't change this - must be 'gestalt-system'
kube_namespace="gestalt-system"
# Whether need manipulate kubeconfig for commonications from within cluster to: https://kubernetes.default.svc
kubeurl_replace=1

# Your gestalt license
gestalt_license="gestalt-license.json"

gestalt_docker_release_tag="release-2.3.8"
gestalt_installer_docker_release_tag="4.0.2"
# Different specific gestalt component versions (gestalt_${component}_release_tag)
gestalt_meta_release_tag="release-2.3.9"
gestalt_security_release_tag="release-2.3.9"
# gestalt_laser_release_tag="release-2.3.8"
# gestalt_policy_release_tag="release-2.3.8"
# gestalt_ui_release_tag="release-2.3.8"
# 
gestalt_laser_executor_python_release_tag="release-2.3.9"

# Image Registry
docker_registry="docker.io/galacticfog"

# Image Pull Secrets
# custom_image_pull_secret=1
# custom_image_pull_secret_namespace=razzyns
# custom_image_pull_secret_name=razzy

# Laser Executor settings
gestalt_laser_executor_js_mincool=1
#gestalt_laser_executor_nodejs_mincool=0
#gestalt_laser_executor_dotnet_mincool=0
#gestalt_laser_executor_golang_mincool=0
#gestalt_laser_executor_jvm_mincool=0
gestalt_laser_executor_python_mincool=1
#gestalt_laser_executor_ruby_mincool=0

# Custom Laser
gestalt_laser_customize=0
# gestalt_laser_customize=1
gestalt_laser_provider_definition="laser-provider-multi-python"
gestalt_laser_executor_list="python-3x6x1-executor:python-3x6x3-executor"
gestalt_laser_executor_python_361_mincool=1
gestalt_laser_executor_python_361_release_tag="python-3.6.1"
gestalt_laser_executor_python_363_mincool=1
gestalt_laser_executor_python_363_release_tag="python-3.6.3"


# Optional, if specified, will override the default cacerts file present in the gestalt-security image.  Comment out to disable.
# gestalt_security_cacerts_file="./cacerts"

# Set to 'Yes' if configuring LDAP, and edit 'ldap-config.yaml'
configure_ldap="No"

# ------------- API Gateway settings ----------------------------------------------

gestalt_kong_service_protocol=http
gestalt_kong_service_host=localhost:31113
# gestalt_kong_service_host=api1.cluster1.galacticfog.com

# The Login URL available to clients
gestalt_ui_service_url=http://localhost:31112
# gestalt_ui_service_url=http://gestalt.cluster1.galacticfog.com

gestalt_meta_service_nodeport=31111
gestalt_ui_service_nodeport=31112
gestalt_kong_service_nodeport=31113
gestalt_logging_service_nodeport=31114
# gestalt_kong_management_nodeport=31115
# gestalt_laser_service_nodeport=31118

# laser_service_vhost=localhost
logging_service_host=localhost:31114
logging_service_protocol=http
# laser_service_vhost=laser.cluster1.galacticfog.com
# logging_service_host=log.cluster1.galacticfog.com


# ------------- UI Settings -------------------------------------------------------

gestalt_ui_ingress_host=localhost
# gestalt_ui_ingress_host=api1-mgmt.cluster1.galacticfog.com

# ------------- Database Configuration --------------------------------------------
# -- To provision an internal database, set provision_internal_database=Yes, then
# -- the other database settings - host, port, credentials - are ignored.

database_image="postgres"
database_image_tag="9.6.2"
database_name=postgres

internal_database_pv_storage_class="hostpath"
# internal_database_pv_storage_class="gp2"

internal_database_pv_storage_size="100Mi"
postgres_persistence_subpath="postgres"
postgres_memory_request=100Mi
postgres_cpu_request=100m

# Create Local (docker-for-desktop)
provision_internal_database=Yes
database_hostname="gestalt-postgresql.gestalt-system.svc.cluster.local"
# provision_internal_database=No
# database_hostname="cluster1.crqimf2biim3.us-east-1.rds.amazonaws.com"

# ------------ Installer settings, typically no need to change --------------------

# -- Lower Resource Settings for local workstation
#gestalt_laser_cpu=0.25
#gestalt_laser_memory=1024

#user setting (if we will do checks)
target_kube_context="docker-for-desktop"
# target_kube_context="cluster1.galacticfog.com"
# target_kube_context="arn:aws:eks:us-east-1:245814043176:cluster/gestalt-eks-dev"
