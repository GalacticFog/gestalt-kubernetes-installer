FOG_CLI_DEBUG: 'false'

# Database
PROVISION_INTERNAL_DATABASE: 'Yes'
DATABASE_HOSTNAME: gestalt-postgresql.gestalt-system.svc.cluster.local
DATABASE_IMAGE_TAG: '9.6.2'
DATABASE_NAME: postgres
DATABASE_PORT: '5432'

# Credentials
ADMIN_PASSWORD: gestaltpoc!
ADMIN_USERNAME: admin
DATABASE_USERNAME: postgres
DATABASE_PASSWORD: abcd1234!

CUSTOM_IMAGE_PULL_SECRET: ''
GESTALT_INSTALL_LOGGING_LVL: debug
JS_EXECUTOR_MIN_COOL: '1'

# Kong
KONG_0_EXTERNAL_PROTOCOL: http
KONG_0_VIRTUAL_HOST: localhost:31113
KONG_INGRESS_SERVICE_NAME: kng-ext
KONG_MANAGEMENT_NODEPORT: ''
KONG_NODEPORT: '31113'

# Laser
LASER_NODEPORT: ''
LASER_PROVIDER_CUSTOMIZE: '0'
LASER_PROVIDER_CUSTOM_EXECUTORS: python-3x6x1-executor:python-3x6x3-executor
LASER_PROVIDER_DEFINITION: laser-provider
LASER_SERVICE_VHOST: ''
LOGGING_NODEPORT: '31114'
LOGGING_SERVICE_HOST: localhost:31114
LOGGING_SERVICE_PROTOCOL: http

# Meta
META_HOSTNAME: gestalt-meta.gestalt-system.svc.cluster.local
META_PORT: '10131'
META_PROTOCOL: http
META_NODEPORT: 31111


PYTHON_3_6_1_EXECUTOR_MIN_COOL: '1'
PYTHON_3_6_3_EXECUTOR_MIN_COOL: '1'
PYTHON_EXECUTOR_MIN_COOL: '1'

# RABBIT
RABBIT_HOST: gestalt-rabbit.gestalt-system
RABBIT_HOSTNAME: gestalt-rabbit.gestalt-system
RABBIT_HTTP_PORT: '15672'
RABBIT_PORT: '5672'

# Security
SECURITY_HOSTNAME: gestalt-security.gestalt-system.svc.cluster.local
SECURITY_PORT: '9455'
SECURITY_PROTOCOL: http

# 'UI'
UI_HOSTNAME: gestalt-ui.gestalt-system.svc.cluster.local
UI_NODEPORT: '31112'
UI_PORT: '80'
UI_PROTOCOL: http

# Elastic search
ELASTICSEARCH_HOST: gestalt-elastic.gestalt-system


# Images
DATABASE_IMAGE:        postgres
DOTNET_EXECUTOR_IMAGE: docker.io/galacticfog/gestalt-laser-executor-dotnet:release-2.3.8
ELASTICSEARCH_IMAGE:   docker.io/galacticfog/elasticsearch-docker:5.3.1
GOLANG_EXECUTOR_IMAGE: docker.io/galacticfog/gestalt-laser-executor-golang:release-2.3.8
GWM_EXECUTOR_IMAGE:    docker.io/galacticfog/gestalt-api-gateway:release-2.3.8
GWM_IMAGE:             docker.io/galacticfog/gestalt-api-gateway:release-2.3.8
JS_EXECUTOR_IMAGE:     docker.io/galacticfog/gestalt-laser-executor-js:release-2.3.8
JVM_EXECUTOR_IMAGE:    docker.io/galacticfog/gestalt-laser-executor-jvm:release-2.3.8
KONG_IMAGE:            docker.io/galacticfog/kong:release-2.3.8
LASER_IMAGE:           docker.io/galacticfog/gestalt-laser:release-2.3.8
LOGGING_IMAGE:         docker.io/galacticfog/gestalt-log:release-2.3.8
META_IMAGE:            docker.io/galacticfog/gestalt-meta:release-2.3.8
NODEJS_EXECUTOR_IMAGE: docker.io/galacticfog/gestalt-laser-executor-nodejs:release-2.3.8
POLICY_IMAGE:          docker.io/galacticfog/gestalt-policy:release-2.3.8
PYTHON_3_6_1_EXECUTOR_IMAGE: docker.io/galacticfog/gestalt-laser-executor-python:python-3.6.1
PYTHON_3_6_3_EXECUTOR_IMAGE: docker.io/galacticfog/gestalt-laser-executor-python:python-3.6.3
PYTHON_EXECUTOR_IMAGE:       docker.io/galacticfog/gestalt-laser-executor-python:release-2.3.8
RABBIT_IMAGE:                docker.io/galacticfog/rabbit:release-2.3.8
RUBY_EXECUTOR_IMAGE:         docker.io/galacticfog/gestalt-laser-executor-ruby:release-2.3.8
SECURITY_IMAGE:              docker.io/galacticfog/gestalt-security:release-2.3.8
UI_IMAGE:                    docker.io/galacticfog/gestalt-ui-react:release-2.3.8


# DATABASE_IMAGE:        postgres
# DOTNET_EXECUTOR_IMAGE: docker.io/galacticfog/gestalt-laser-executor-dotnet:latest
# ELASTICSEARCH_IMAGE:   docker.io/galacticfog/elasticsearch-docker:5.3.1
# GOLANG_EXECUTOR_IMAGE: docker.io/galacticfog/gestalt-laser-executor-golang:latest
# GWM_EXECUTOR_IMAGE:    docker.io/galacticfog/gestalt-api-gateway:latest
# GWM_IMAGE:             docker.io/galacticfog/gestalt-api-gateway:latest
# JS_EXECUTOR_IMAGE:     docker.io/galacticfog/gestalt-laser-executor-js:latest
# JVM_EXECUTOR_IMAGE:    docker.io/galacticfog/gestalt-laser-executor-jvm:latest
# KONG_IMAGE:            docker.io/galacticfog/kong:latest
# LASER_IMAGE:           docker.io/galacticfog/gestalt-laser:latest
# LOGGING_IMAGE:         docker.io/galacticfog/gestalt-log:latest
# META_IMAGE:            docker.io/galacticfog/gestalt-meta:latest
# NODEJS_EXECUTOR_IMAGE: docker.io/galacticfog/gestalt-laser-executor-nodejs:latest
# POLICY_IMAGE:          docker.io/galacticfog/gestalt-policy:latest
# # PYTHON_3_6_1_EXECUTOR_IMAGE: docker.io/galacticfog/gestalt-laser-executor-python:python-3.6.1
# # PYTHON_3_6_3_EXECUTOR_IMAGE: docker.io/galacticfog/gestalt-laser-executor-python:python-3.6.3
# PYTHON_EXECUTOR_IMAGE:       docker.io/galacticfog/gestalt-laser-executor-python:latest
# RABBIT_IMAGE:                docker.io/galacticfog/rabbit:latest
# RUBY_EXECUTOR_IMAGE:         docker.io/galacticfog/gestalt-laser-executor-ruby:latest
# SECURITY_IMAGE:              docker.io/galacticfog/gestalt-security:latest
# UI_IMAGE:                    docker.io/galacticfog/gestalt-ui-react:latest

KUBECONFIG_BASE64: YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGluc2VjdXJlLXNraXAtdGxzLXZlcmlmeTogdHJ1ZQogICAgc2VydmVyOiBodHRwczovL2t1YmVybmV0ZXMuZGVmYXVsdC5zdmMKICBuYW1lOiBkb2NrZXItZm9yLWRlc2t0b3AtY2x1c3Rlcgpjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogZG9ja2VyLWZvci1kZXNrdG9wLWNsdXN0ZXIKICAgIHVzZXI6IGRvY2tlci1mb3ItZGVza3RvcAogIG5hbWU6IGRvY2tlci1mb3ItZGVza3RvcApjdXJyZW50LWNvbnRleHQ6IGRvY2tlci1mb3ItZGVza3RvcApraW5kOiBDb25maWcKcHJlZmVyZW5jZXM6IHt9CnVzZXJzOgotIG5hbWU6IGRvY2tlci1mb3ItZGVza3RvcAogIHVzZXI6CiAgICBjbGllbnQtY2VydGlmaWNhdGUtZGF0YTogTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVTTVSRU5EUVdSNVowRjNTVUpCWjBsSlRtOTRVWEpOTm5SSmFFVjNSRkZaU2t0dldrbG9kbU5PUVZGRlRFSlJRWGRHVkVWVVRVSkZSMEV4VlVVS1FYaE5TMkV6Vm1sYVdFcDFXbGhTYkdONlFXVkdkekI0VDBSRmVVMUVXWGROUkVVelRrUktZVVozTUhoUFZFVjVUVVJuZUU1NlNYcE5la1poVFVSWmVBcEdla0ZXUW1kT1ZrSkJiMVJFYms0MVl6TlNiR0pVY0hSWldFNHdXbGhLZWsxU2MzZEhVVmxFVmxGUlJFVjRTbXRpTWs1eVdsaEpkRnB0T1hsTVYxSnNDbU15ZERCaU0wRjNaMmRGYVUxQk1FZERVM0ZIVTBsaU0wUlJSVUpCVVZWQlFUUkpRa1IzUVhkblowVkxRVzlKUWtGUlJHNDFlVk5ZWWtoalMxWm1iMVlLZWt0TVNFSlFOR2dyUzNNMFYydDZhWFJOYlZaRmEzVlJhRTFYVjBSSGJHNTVWakpqZFZwM2F6TTNTM0phYm1zeFFUUjJZalowWmk5WlRXMU9SMGh4TXdwWE5WVXpiMEpYWTFsWllpdGhkMjh4VW5OSmJ6QnFja1pKU1ZJNFNqUkNha3RLT0UxWVIyUnpjMU0zZUhWaFpXeHpjbnBPUVc1Q1ZVSklNaTlKWTBrMkNuWkRiM295UjA1RU1UbExLMUZ6WlVSa09YVlpiMVZtWTFObVluTnNlVE5LYkVFNFpETjNMMU56WmxSUmJXZGxaMk42Vm1oSmNWWTNVRmhaUmtwd2VVc0tUemRFVFRsM1ZGSXlhMnN2YzJ4NVltYzRZM0JXVDNJMlJGa3dWbXd2U2tGTldEQlJiSGh0VjFBcmNUQjFjMDR6U1U5RFJuUkpibEZFTVVwaWRVRk9kd3BqVjJrM1VqRmFLM1UyVlRod1lscHVNVUV5U0RKRllWSnFTMlV6ZFdsdmNFaFpjMnQzY0ZjMVJVNVZiVUpaZFRsNU5HOWxMMW8wUm1Wb1ZHaHVNV1pwQ201UWJYUk1NV2RxUVdkTlFrRkJSMnBLZWtGc1RVRTBSMEV4VldSRWQwVkNMM2RSUlVGM1NVWnZSRUZVUW1kT1ZraFRWVVZFUkVGTFFtZG5ja0puUlVZS1FsRmpSRUZxUVU1Q1oydHhhR3RwUnpsM01FSkJVWE5HUVVGUFEwRlJSVUZHUkhSRE4wNVlUbTVLZVZVeFdtRjZTa1pFVVhwcU4xWlNSRkp0UkhVck5RcGtiRlozTVVveU5VcE5kM1pIWkVSb1JsaGlVRnBaZEZGWk1XZHFhMFJaSzFVd1RrMXZUWHBHVlhOSVFVdzFMMUJ4U0hsNVNqbHpNbGdyWkVjcmQyMU9DbWhZYms0elQwbEVZbll2YlVoUGVtdDJXVWxLTnpCM2QwUmtkbXRvZUcxNGJsTkRNVmw2WWtSbVpuaFlUMlJNUTBOeGIyZHllRWhUS3pGQldtd3laRU1LZVd0bE1taHJSR3BVVTJoMFdHdGhhbEpoVVhobVUyRmpZVWcwUWsxUVEwcFNUVmhzTm5rd09VVnFRaTl0ZFZSdldsUXdhSFkwWm5JNFJqQkVWV05WYXdwa016SnRjalZYT0RnNE5qbDNUbU0wTTJobVpFVTRjelJYY0d4WVQwazBhakpXYlhGWGVscG1lVmMzZVd4SVFtTkdNRGxMY2pWTll6ZDVMMlJYYjJWNENuVXdaa3h0VlcxUVZsRmFTamxIY1VGM2JYUmFNWFV4V21ocVExQk5kblJPUTJWM1NGcFRNRmh6TUdadmIyTnpaMEY0YWxoa1p6MDlDaTB0TFMwdFJVNUVJRU5GVWxSSlJrbERRVlJGTFMwdExTMEsKICAgIGNsaWVudC1rZXktZGF0YTogTFMwdExTMUNSVWRKVGlCU1UwRWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRcE5TVWxGYjNkSlFrRkJTME5CVVVWQk5TdGphMnd5ZURORGJGZzJSbU41YVhoM1ZDdEpabWx5VDBad1RUUnlWRXBzVWtwTWEwbFVSbXhuZUhCYU9HeGtDbTVNYldOS1RpdDVjVEphTlU1UlQwd3lLM0pZTHpKRVNtcFNhRFowTVhWV1RqWkJWbTVIUjBjdmJYTkxUbFZpUTB0T1NUWjRVME5GWmtObFFWbDVhV1lLUkVaNGJtSk1SWFU0WW0xdWNHSkxPSHBSU25kV1FWSTVkbmxJUTA5eWQzRk5PV2hxVVRsbVUzWnJURWhuTTJaaWJVdEdTRE5GYmpJM1NtTjBlVnBSVUFwSVpEaFFNSEpJTURCS2IwaHZTRTB4V1ZOTGJHVjZNVEpDVTJGamFXcDFkM3BRWTBVd1pIQktVRGRLWTIwMFVFaExWbFJ4SzJjeVRrWmFabmxSUkVZNUNrVktZMXBzYWk5eGRFeHlSR1I1Ukdkb1lsTktNRUU1VTFjM1owUmpTRVp2ZFRCa1YyWnlkV3hRUzFjeVdqbFJUbWc1YUVkcldYbHVkRGR2Y1V0U01rd0tTazFMVm5WU1JGWktaMWRNZG1OMVMwaDJNbVZDV0c5Vk5GbzVXRFJ3ZWpWeVV6bFpTWGRKUkVGUlFVSkJiMGxDUVVoaU9WQXJXU3RpYW05elkxWjVZd3BIYlRKYU0zcG1Xa2Q1YlZsRk9XeEVVVU5sZDAxdWRXUXhURUYzUVVOdFZIaGxaWHA1VXpKWFdteDJVMEZoUlRGQ05UZzBkV050T0doTk5WUTBRM1ZUQ2pNeFlXbFhiRkpoUzIxVlF6QlZUVk0wYlRoR2NEaG5ZamRxTm5sSFozUkhMMWw2WmtsUFdrSmFOeTgyVEdNME1HcDJSakpNWlVzclVucE5Oa0pEYjFZS1FVZGhTSGRwT0N0WU1VUnRaazgyTVVsclZVaG9Ra3hDUms5VVFtd3hWWEozY25SRlFYVTNOMGR4YjB0WmQxbE9NRVJ1Y3l0SlpESmhWbFp0ZGtoSmJnb3lkRGgxVW5GNGJVWklWR0pqVGpsUEwzTXZhVUpSYUZSdFJUUTJVVmQzVkdob2NsWnNVRlpyWlc0eVFsSldWVUpKWVhCRFRUbG1kemRVV1ZrNGN5OVpDbmtyVmxOWVNqRjRjelUwTUhGcFVTOVlWRlpKVDB0c1ZXMTRlbWRyTWpodlJIaEViR2xwZUhONGVXeE9lVGRZUWpWTU9XbDZWSEJNTjJGamFrbGtVVFFLVGt4MWRYSTFSVU5uV1VWQkswRnFaV3AzTUN0WFMxSXdhVzlhTkZKc2MwRXlVbEJ3TTBvM1VEa3djM2N6WkRVNGVHbDNVMkZYYmswMmFGWkNkMXBQY0FwcWNXVmlRV2QxVW1OSVRpOHhSbW93YVRFM2JUSkRLekpITTBKQ01rZDFORE5YTm5aMU5rUTRlbE5XWm5WNWMzUmtiWFZqVGk5WkwybE1ZV1JhT0ZCdENtazVkMUZsV1M5M05rdHVjRTQxU0hwT1pVRkdhbGhxTmxWVUswNDNiSFJSTDI1V2IzTkRUVlJYVkVKbE4xbE1kVlZNWkN0M1RITkRaMWxGUVRjeGJXMEtOMEpsWTFobVlqWk9RVE5SWTA1YVlVODJhazU1WmpNMFoycHFaalEyV0ZGSlVTdElNVVpMT0RVelpscFZkRVEyZGtKRlZVNTRSbk5aZFdKb1dDOXJkUXB2VjFCcVFWUXdjMmcwUVdoRGVHWkpRMVphVVZSV1QwdFFNbmxxYlZGUVQwTkRWSEJwWTFVeE9IbzRORGhaZWxSb2VHOUxLMnQ1VFZNNWJqTm9kemxWQ2paM2JUZDZSMUJuWWpaWk1EaHpRalpuZFVoNGJIUktOVlI1UjNGalQydGpWVk5qZEc4M2EwTm5XVVZCTUc4NFl5dEZNbWt4Y21ST1dTdGxRbkJUUWs4S1IxQnZjSFJ4ZEhaSGNIcFFUVUp3VjNwQ2FsQjZTVTFRWmsxNGN6RlFjMWx1YzNsNk56QnRTWFoyUTJRelRrNXFWR2RzVkdGTlZXZEZRM281UTAwNWVBb3dWRVJOY1VScGFsRjZablZET0UwNGVHVklWMkpVT1hwaloybHpiVlpGV201NlRrUklVamxRZDFGUE1IZDNURFJrTkhwcmVXUlBaMnhIWVdsbk1qQnlDakZqWjNkQ1p6ZFJkSGM0TUVaMVltMXFjMnR1U21zNFEyZFpRamN2V0dSd1UyNXViMlV5TnpFeFJXOXphV1kxU1dSYVVGWnNZMnhOZGtkWVVFdHFRamtLVkN0NFVGa3lWVlZwTlU0M1VWZE5RMVprTm1oQlJtVnFha2hOYjBsdkszcGlNbXhFVmxGMGFWUnJMMUI2VlhkRksyb3Jla3g0Ylc4M1dVSTJXR1YzTXdwaU9XWkVWbEJSZW5oSllXUkxlRlJTU1dZMldqRXhiU3RYV0ZoUE9ETlNUVXBqYVhobmRsQmlTWE5ETDBkR1RHVjRiV3NyWkd3ek9WUnFWbUpPU1dSRkNubDNWSEpyVVV0Q1owUmFVWGd2SzNWT1lXbGpVV1I1VGxreGNuYzBWakZzT1dNNFFYcDNRWGRNVVdsNVUzVklkRmxRVWtwWVdFVXljaXN2VFdGb1ZEWUtSV2hXVFhSTE5YbDNVVlZLVURkMFZUY3pkRVpwTmxSUGFrWjFSM2hwU0ZaQ2F6aEdUVFJwVFU1SFVsVjZaelpaYmxaUFpXbENielphYlRsc05WRlVLd3BoZVdkMFVVMXNNekl3UlV4TWVsZERRa1pxU2swdmNFSk9VbVp5ZEdSMVMyNTJhRWt3YWpFcldXMXJjREJ5T1U0eWRWUnhDaTB0TFMwdFJVNUVJRkpUUVNCUVVrbFdRVlJGSUV0RldTMHRMUzB0Q2c9PQo=


# POSTGRES database settings
internal_database_pv_storage_class: hostpath
internal_database_pv_storage_size: 100Mi
postgres_persistence_subpath: postgres
postgres_memory_request: 100Mi
postgres_cpu_request: 100m
