
# TODO - Pull out additional configuration options
common:
  imagePullPolicy: Always
  # imagePullPolicy: IfNotPresent

security:
  # image: galacticfog/gestalt-security:release-2.1.0
  exposedServiceType: NodePort
  hostname: gestalt-security.gestalt-system
  port: 9455
  protocol: http
  databaseName: gestalt-security

rabbit:
  # image: galacticfog/rabbit:release-2.1.0
  hostname: gestalt-rabbit.gestalt-system
  port: 5672
  httpPort: 15672

elastic:
  # image: galacticfog/elasticsearch-docker:5.3.1
  hostname: gestalt-elastic.gestalt-system
  restPort: 9200
  transportPort: 9300

meta:
  # image: galacticfog/gestalt-meta:release-2.1.0
  exposedServiceType: NodePort
  hostname: gestalt-meta.gestalt-system
  port: 10131
  protocol: http
  databaseName: gestalt-meta

kong:
  nodePort: 31113

logging:
  nodePort: 31114

ui:
  # image: galacticfog/gestalt-ui-react:release-2.1.0
  exposedServiceType: NodePort
  nodePort: 31112
  ingress:
    host: localhost

# Database configuration:
# Provision an internal database
# TODO - use this to determine whether to provision postgres as container
#provision-internal-db: true

postgresql:
  postgresUser: postgres
  postgresDatabase: postgres
  persistence:
    size: 100Mi
    storageClass: "hostpath"
    subPath: ""
  resources:
    requests:
      memory: 100Mi
      cpu: 100m
  service:
    port: 5432
    type: ClusterIP

# Internal DB settings
db:
  # Hostname must be fully qualified for Kong service
  hostname: gestalt-postgresql.gestalt-system.svc.cluster.local
  port: 5432
  # username: postgres
  databaseName: postgres

installer:
  # image: galacticfog/gestalt-installer:release-2.1.0
  mode: debug
  useDynamicLoadBalancers: No
  externalGateway:
    dnsName: localhost
    protocol: http
    kongServiceName: kng
