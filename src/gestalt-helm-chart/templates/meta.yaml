apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "gestalt.metaName" . }}
  labels:
    gestalt-app: 'meta'
    app.kubernetes.io/name: {{ .Release.Name | quote }}
    app.kubernetes.io/app: 'gestalt'
    app.kubernetes.io/component: {{ template "gestalt.metaName" . }}
spec:
  replicas: 1
  template: # create pods using pod definition in this template
    metadata:
      labels:
        gestalt-app: 'meta'
        app.kubernetes.io/name: {{ .Release.Name | quote }}
        app.kubernetes.io/app: 'gestalt'
        app.kubernetes.io/component: {{ template "gestalt.metaName" . }}
    spec:
      imagePullSecrets:
      - name: imagepullsecret-1
      - name: imagepullsecret-2
      - name: imagepullsecret-3
      - name: imagepullsecret-4
      - name: imagepullsecret-5
      containers:
      - name: {{ template "gestalt.metaName" . }}
        image: {{ .Values.meta.image | quote }}
        imagePullPolicy: {{ .Values.common.imagePullPolicy | quote }}
        ports:
        - containerPort: 9000
          name: 'service-api'
        {{- if .Values.meta.enableReadinessProbe }}
        readinessProbe:
          initialDelaySeconds: 60
          periodSeconds: 30
          httpGet:
            path: '/health'
            port: 'service-api'
            scheme: 'HTTP'
        {{- end }}
        {{- if .Values.meta.enableLivenessProbe }}
        livenessProbe:
          initialDelaySeconds: 120
          periodSeconds: 30
          httpGet:
            path: '/health'
            port: 'service-api'
            scheme: 'HTTP'
        {{- end }}
        # TODO - 
        # resources:
        #   requests:
        #     cpu: 250m
        #     memory: 2Gi
        #   limits:
        #     memory: 2Gi
        env:
        - name: 'DATABASE_HOSTNAME'
          value: {{ template "gestalt.dbHost" . }}
        - name: 'DATABASE_NAME'
          value: {{ .Values.meta.databaseName | quote }}
        - name: 'DATABASE_PASSWORD'
          valueFrom:
            secretKeyRef:
              name: {{ template "gestalt.secretsName" . }}
              key: 'db-password'
        - name: 'DATABASE_USERNAME'
          valueFrom:
            secretKeyRef:
              name: {{ template "gestalt.secretsName" . }}
              key: 'db-username'
        - name: DATABASE_PORT
          value: {{ template "gestalt.dbPort" . }}
        - name: 'GESTALT_SECURITY_HOSTNAME'
          value: {{ template "gestalt.securityHost" . }}
        - name: 'GESTALT_SECURITY_PORT'
          value: {{ .Values.security.port | quote }}
        - name: 'GESTALT_SECURITY_PROTOCOL'
          value: {{ .Values.security.protocol | quote }}
        - name: 'RABBIT_HOST'
          value: {{ template "gestalt.rabbitHost" . }}
        - name: 'RABBIT_PORT'
          value: {{ .Values.rabbit.port | quote }}
        - name: 'RABBIT_HTTP_PORT'
          value: {{ .Values.rabbit.httpPort | quote }}
        - name: 'RABBIT_EXCHANGE'
          value: 'policy-exchange'
        - name: 'RABBIT_ROUTE'
          value: 'policy'
        - name: 'META_AUDIT_ENABLED'
          value: 'false'
        - name: 'META_UPGRADE_CHECK_ENABLED'
          value: {{ .Values.meta.upgradeCheckEnabled | quote }}
        - name: 'META_UPGRADE_URL'
          value: {{ .Values.meta.upgradeUrl | quote }}
        - name: 'META_UPGRADE_CHECK_HOURS'
          value: {{ .Values.meta.upgradeCheckHours | quote }}
