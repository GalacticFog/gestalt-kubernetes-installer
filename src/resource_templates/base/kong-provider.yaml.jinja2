name: default-kong
description: The default gestalt kong provider
resource_type: Gestalt::Configuration::Provider::Kong
properties:
  config:
    env:
      public:
        USERNAME: unused
        PASSWORD: currently
        PUBLIC_URL_VHOST_0: '#{Config KONG_SERVICE_HOST}'
      private:
        KONG_CLUSTER_ADVERTISE: $(POD_IP):7946
        KONG_CLUSTER_LISTEN: $(POD_IP):7946
        KONG_CUSTOM_PLUGINS: gestalt-security-kong
        KONG_LUA_PACKAGE_PATH: /usr/local/custom/?.lua;;
        POSTGRES_NAME: kong-db
    external_protocol: '#{Config KONG_SERVICE_PROTOCOL}'
  linked_providers:
  - name: POSTGRES
    id: '#{Provider /root/default-postgres id}'
  services:
  - init:
      binding: eager
      singleton: true
    container_spec:
      name: kng
      properties:
        cpus: 0.2
        memory: 1024
        accepted_resource_roles:
        - production
        - '*'
        env: {}
        num_instances: 1
        network: BRIDGE
        container_type: DOCKER
        image: '#{Config KONG_IMAGE}'
        force_pull: true
        health_checks:
        - grace_period_seconds: 300
          interval_seconds: 60
          max_consecutive_failures: 3
          path: /
          port_index: 1
          port_type: index
          protocol: HTTP
          timeout_seconds: 20
        provider:
          id: '#{Provider /root/default-kubernetes id}'
        labels: 
          app.kubernetes.io/app: 'gestalt'
          app.kubernetes.io/name: '#{Config RELEASE_NAME}'
        port_mappings:
        # Public port for API Gateway used by API clients
        - name: public-url
          protocol: tcp
          container_port: 8000
          expose_endpoint: true
          service_port: #{Config KONG_NODEPORT}
        {% if KONG_SERVICE_TYPE == "LoadBalancer" %}
          type: loadBalancer
          lb_ip: '#{Config KONG_STATIC_IP}'
          lb_port: 80
          virtual_hosts: []
        {% else %}
          type: external # type should be set to 'external' to be a Kubernetes NodePort
          {% if K8S_PROVIDER == "gke" and KONG_STATIC_IP != "" %}
          ingress_global_static_ip_name: '#{Config KONG_STATIC_IP}'
          {% endif %}
          {% if NODNS_INSTALL == "1" %}
          virtual_hosts: []
          {% else %}
          lb_port: 80
          virtual_hosts:
          - '#{Config KONG_SERVICE_HOST}'
          {% endif %}
        {% endif %}
        # Service port used by Gateway manager
        - name: service
          protocol: tcp
          container_port: 8001
          # service_port: # {Config KONG_MANAGEMENT_NODEPORT}
          expose_endpoint: true
          type: external
          virtual_hosts: []
